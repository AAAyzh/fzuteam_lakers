//ai工作小助手

所有人的代码放到仓库的第二次小组作业文件夹中，提交方法依旧是pull request！

作业说明：简单来说就是前端与mcp server里的ai模型交互，ai可以调用工具函数并且作出回应

1、函数组需要做出一套可用的函数，逻辑都很简单，都是对mysql数据库进行一系列操作，现做出规范：
	待办事项数据结构
	class todo_task:
		def __init__(self,num,time,place,staff,something,urgency):
			self.num=num	#编号，整数
			self.time=time	#时间，字符串，格式为xxxx-xx-xx
			self.place=place	#地点，字符串
			self.staff=staff	#人物，字符串
			self.something=something	#做什么，字符串
			self.urgency=urgency	#紧急程度，整数,0,1,2,3,越大越紧迫，0代表已完成

	函数规范：
		输出都是字符串！

		增：向mysql数据库插入数据，输出xxx事项增添成功

		删：根据编号删除mysql数据库中的数据，输出删除成功

		更新：输入应该是编号与更新后紧急程度，更新后输出xxx状态更新成功

		查：根据编号查询数据库，输出该数据
		
		生成清单：先取出数据库的所有数据（放到列表中），然后按照紧急程度进行排序，直接return排序后的列表

2、函数组的测试需要自己设计一些输入数据（至少得有5条待办事项吧），对完成的五个函数进行测试，要求保留输入以及结果截图做成word，发现问题了在群里汇报

3、后端，做一个flask架构（最简单的）实现网页后端，留出一个函数用于与前端交互（具体实现后面再说）

4、前端，能够将输入的一个列表里的所有数据做成一个简洁，美观的页面（其实就是生成一个清单，用网页展现出来更好看），有其他需求找后端商量

5、灵活组一个后面写博客园一个设计几个例子测试最后的智能体
